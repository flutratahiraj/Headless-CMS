{"version":3,"file":"component---src-pages-om-mig-js-6be24ddc631338b3bfa7.js","mappings":"gNA2DA,MAxDe,IAAe,IAAd,KAAEA,GAAM,EACtBC,QAAQC,IAAI,CAAEF,SACd,MAAMG,EAAQH,EAAKI,oBAAoBD,MAKjCE,EAAS,CACbC,UAAW,CACTC,SAAU,QACVC,OAAQ,OACRC,OAAQ,iBACRC,QAAS,QAEXC,QAAS,CACPC,SAAU,WACVC,QAAS,OACTC,WAAY,SACZC,IAAK,OAEPC,MAAO,CACLT,SAAU,MACVU,OAAQ,OACRJ,QAAS,SAEXK,KAAM,CACJC,UAAW,OACXC,SAAU,QAEZC,MAAO,CACLD,SAAU,OACVE,aAAc,SAIlB,OACE,gCAEGrB,QAAQC,IAAIF,EAAKI,qBACjBD,EAAMoB,KAAI,CAACC,EAAMC,IAChB,uBAAKC,MAAOrB,EAAOC,UAAWqB,IAAKF,GACjC,sBAAIC,MAAOrB,EAAOgB,OAAQG,EAAKH,OAC/B,uBAAKK,MAAOrB,EAAOM,SACjB,qBAAGe,MAAOrB,EAAOa,MAAOM,EAAKI,KAAKA,MAClC,gBAAC,EAAAC,EAAW,CACVb,OAAOc,EAAAA,EAAAA,GAASN,EAAKO,WACrBL,MAAOrB,EAAOW,MAAMgB,gBACpBC,IAAKT,EAAKH,YAKjB,ECmBP,MArEe,IAAe,IAAd,KAAErB,GAAM,EACtB,MAAMG,EAAQH,EAAKkC,wBAAwB/B,MAErCE,EAAS,CACbC,UAAW,CACTC,SAAU,QACVC,OAAQ,OACRC,OAAQ,iBACRC,QAAS,QAEXC,QAAS,CACPC,SAAU,WACVC,QAAS,OACTC,WAAY,SACZC,IAAK,OAEPC,MAAO,CACLT,SAAU,MACVU,OAAQ,OACRJ,QAAS,SAEXK,KAAM,CACJC,UAAW,OACXC,SAAU,QAEZC,MAAO,CACLD,SAAU,OACVE,aAAc,SAIlB,OACE,gCAEGnB,EAAMoB,KAAI,CAACC,EAAMC,IAChB,uBAAKC,MAAOrB,EAAOC,UAAWqB,IAAKF,GACjC,sBAAIC,MAAOrB,EAAOgB,OAAQG,EAAKH,OAC/B,uBAAKK,MAAOrB,EAAOM,SACjB,qBAAGe,MAAOrB,EAAOa,MAAOM,EAAKI,KAAKA,MAClC,gBAAC,EAAAC,EAAW,CACVb,OAAOc,EAAAA,EAAAA,GAASN,EAAKW,KACrBT,MAAOrB,EAAOW,MAAMgB,gBAEpBC,IAAKT,EAAKH,YAKjB,EChDIe,EAAW,iCAIXf,EAAQ,8BACRgB,EAAc,qCC8FzB,MArFc,IAAe,IAAd,KAAErC,GAAM,EACrBC,QAAQC,IAAI,CAAEF,SACd,MAAMsC,EAActC,EAAKuC,mBAAmBC,MAE5C,OACE,gBAACC,EAAA,EAAM,KACL,wBAAMC,UDnBe,wCCoBlBJ,EAAYf,KAAI,QAAC,KAAEC,GAAM,SACxB,uBAAKG,IAAKH,EAAKH,MAAOqB,UDnBX,iCCoBT,sBAAIA,UAAWrB,GAAQG,EAAKH,OAC5B,qBAAGqB,UDtBW,uCCuBXC,EAAAA,EAAAA,GACCC,KAAKC,MAAMrB,EAAKsB,kBAAkBC,OAIrCvB,EAAKwB,sBACJxB,EAAKwB,qBAAqBC,OAAS,GACjC,uBAAKP,UDjCM,uCCkCT,uBAAKA,UAAWN,GACd,sBAAIM,UAAWrB,GAAO,cACtB,uBAAKqB,UAAWL,GACbb,EAAKwB,qBAAqBzB,KAAI,CAAC2B,EAAQC,IACtC,gBAAC,EAAM,CAACxB,IAAKwB,EAAanD,KAAMA,QAKrCwB,EAAK4B,YAAc5B,EAAK4B,WAAWH,OAAS,GAC3C,uBAAKP,UAAWN,GACd,sBAAIM,UAAWrB,GAAO,cACtB,uBAAKqB,UAAWL,GACd,gBAAC,EAAU,CAACrC,KAAMA,OAM1B,KAGH,C","sources":["webpack://lekplats-gatsby/./src/components/arbete.js","webpack://lekplats-gatsby/./src/components/utbildning.js","webpack://lekplats-gatsby/./src/styles/arbete.module.css","webpack://lekplats-gatsby/./src/pages/omMig.js"],"sourcesContent":["import React from \"react\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\n\r\nconst Arbete = ({ data }) => {\r\n  console.log({ data });\r\n  const nodes = data.allContentfulArbete.nodes;\r\n\r\n  // };\r\n\r\n  // Inline CSS-stilar som en JavaScript-objekt\r\n  const styles = {\r\n    thumbnail: {\r\n      maxWidth: \"400px\" /* Justera bredden efter behov */,\r\n      margin: \"20px\",\r\n      border: \"1px solid #ccc\",\r\n      padding: \"30px\",\r\n    },\r\n    content: {\r\n      position: \"relative\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      gap: \"5px\",\r\n    },\r\n    image: {\r\n      maxWidth: \"50%\",\r\n      height: \"auto\",\r\n      display: \"block\",\r\n    },\r\n    text: {\r\n      marginTop: \"10px\",\r\n      fontSize: \"14px\",\r\n    },\r\n    title: {\r\n      fontSize: \"20px\",\r\n      marginBottom: \"10px\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Loopa igenom varje nod och visa titel, bild och text */}\r\n      {console.log(data.allContentfulArbete)}\r\n      {nodes.map((node, index) => (\r\n        <div style={styles.thumbnail} key={index}>\r\n          <h1 style={styles.title}>{node.title}</h1>\r\n          <div style={styles.content}>\r\n            <p style={styles.text}>{node.info.info}</p>\r\n            <GatsbyImage\r\n              image={getImage(node.imageStar)}\r\n              style={styles.image.getsbyImageData}\r\n              alt={node.title}\r\n            />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Arbete;\r\n","import React from \"react\";\r\n// import { graphql } from \"gatsby\"\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\n/*GatsbyImage för bildoptimering, alt med titel som värde.\r\nMen alt-attributer kan lämnas tomma och ändå höja tillgänligheten*/\r\nconst Arbete = ({ data }) => {\r\n  const nodes = data.allContentfulUtbildning.nodes;\r\n  // Inline CSS-stilar som en JavaScript-objekt\r\n  const styles = {\r\n    thumbnail: {\r\n      maxWidth: \"400px\" /* Justera bredden efter behov */,\r\n      margin: \"20px\",\r\n      border: \"1px solid #ccc\",\r\n      padding: \"30px\",\r\n    },\r\n    content: {\r\n      position: \"relative\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      gap: \"5px\",\r\n    },\r\n    image: {\r\n      maxWidth: \"50%\",\r\n      height: \"auto\",\r\n      display: \"block\",\r\n    },\r\n    text: {\r\n      marginTop: \"10px\",\r\n      fontSize: \"14px\",\r\n    },\r\n    title: {\r\n      fontSize: \"20px\",\r\n      marginBottom: \"10px\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Loopa igenom varje nod och visa titel, bild och text */}\r\n      {nodes.map((node, index) => (\r\n        <div style={styles.thumbnail} key={index}>\r\n          <h1 style={styles.title}>{node.title}</h1>\r\n          <div style={styles.content}>\r\n            <p style={styles.text}>{node.info.info}</p>\r\n            <GatsbyImage\r\n              image={getImage(node.img)}\r\n              style={styles.image.getsbyImageData}\r\n              // src={node.img.file.url}\r\n              alt={node.title}\r\n            />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n// export const query = graphql`\r\n//   query MyQuery {\r\n//     allContentfulUtbildning {\r\n//       nodes {\r\n//         title\r\n//         info {\r\n//           info\r\n//         }\r\n//         img {\r\n//           file {\r\n//             url\r\n//           }\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n// `;\r\n\r\nexport default Arbete;\r\n","// extracted by mini-css-extract-plugin\nexport var educationGallery = \"arbete-module--education-gallery--8cc00\";\nexport var flexContainer = \"arbete-module--flexContainer--aeece\";\nexport var flexItem = \"arbete-module--flexItem--b521b\";\nexport var gridContainer = \"arbete-module--gridContainer--995c6\";\nexport var gridItem = \"arbete-module--gridItem--5c3a9\";\nexport var mainContainer = \"arbete-module--main-container--2d410\";\nexport var presentation = \"arbete-module--presentation--3db79\";\nexport var section = \"arbete-module--section--83069\";\nexport var title = \"arbete-module--title--03bd9\";\nexport var workGallery = \"arbete-module--work-gallery--c8a07\";","import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\r\nimport Layout from \"../components/Layout\";\r\nimport Arbete from \"../components/arbete\";\r\nimport Utbildning from \"../components/utbildning\";\r\n/*Hämtar mina stilar från stylesheet som INTE är den globala filen*/\r\n/*Graphql frågorna som tillhär mina komponenter ligger i den här filen\r\noch inte i komponenterna eftersom data skickas upp till föräldern*/\r\nimport {\r\n  mainContainer,\r\n  section,\r\n  title,\r\n  presentation,\r\n  workGallery,\r\n  gridContainer,\r\n  gridItem,\r\n} from \"../styles/arbete.module.css\";\r\n\r\nconst OmMig = ({ data }) => {\r\n  console.log({ data });\r\n  const aboutmeList = data.allContentfulOmMig.edges;\r\n\r\n  return (\r\n    <Layout>\r\n      <main className={mainContainer}>\r\n        {aboutmeList.map(({ node }) => (\r\n          <div key={node.title} className={section}>\r\n            <h1 className={title}>{node.title}</h1>\r\n            <p className={presentation}>\r\n              {documentToReactComponents(\r\n                JSON.parse(node.presentationstext.raw)\r\n              )}\r\n            </p>\r\n\r\n            {node.arbetslivserfarenhet &&\r\n              node.arbetslivserfarenhet.length > 0 && (\r\n                <div className={gridContainer}>\r\n                  <div className={gridItem}>\r\n                    <h2 className={title}>Erfarenhet</h2>\r\n                    <div className={workGallery}>\r\n                      {node.arbetslivserfarenhet.map((arbete, arbeteIndex) => (\r\n                        <Arbete key={arbeteIndex} data={data} />\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {node.utbildning && node.utbildning.length > 0 && (\r\n                    <div className={gridItem}>\r\n                      <h2 className={title}>Utbildning</h2>\r\n                      <div className={workGallery}>\r\n                        <Utbildning data={data} />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n          </div>\r\n        ))}\r\n      </main>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allContentfulOmMig {\r\n      edges {\r\n        node {\r\n          title\r\n          utbildning\r\n          arbetslivserfarenhet\r\n          presentationstext {\r\n            raw\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allContentfulUtbildning {\r\n      nodes {\r\n        title\r\n        info {\r\n          info\r\n        }\r\n        plats\r\n        img {\r\n          gatsbyImageData\r\n        }\r\n      }\r\n    }\r\n    allContentfulArbete {\r\n      nodes {\r\n        title\r\n        info {\r\n          info\r\n        }\r\n        imageStar {\r\n          gatsbyImageData\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default OmMig;\r\n"],"names":["data","console","log","nodes","allContentfulArbete","styles","thumbnail","maxWidth","margin","border","padding","content","position","display","alignItems","gap","image","height","text","marginTop","fontSize","title","marginBottom","map","node","index","style","key","info","G","getImage","imageStar","getsbyImageData","alt","allContentfulUtbildning","img","gridItem","workGallery","aboutmeList","allContentfulOmMig","edges","Layout","className","documentToReactComponents","JSON","parse","presentationstext","raw","arbetslivserfarenhet","length","arbete","arbeteIndex","utbildning"],"sourceRoot":""}