{"version":3,"file":"component---src-pages-om-mig-js.js","mappings":"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","sources":["webpack://lekplats-gatsby/./node_modules/camelcase/index.js","webpack://lekplats-gatsby/../src/image-utils.ts","webpack://lekplats-gatsby/../src/components/hooks.ts","webpack://lekplats-gatsby/../src/components/placeholder.tsx","webpack://lekplats-gatsby/../src/components/picture.tsx","webpack://lekplats-gatsby/../src/components/main-image.tsx","webpack://lekplats-gatsby/../src/components/layout-wrapper.tsx","webpack://lekplats-gatsby/../src/components/gatsby-image.server.tsx","webpack://lekplats-gatsby/../src/components/static-image.server.tsx","webpack://lekplats-gatsby/./src/components/Navbar.js","webpack://lekplats-gatsby/./src/components/Footer.js","webpack://lekplats-gatsby/./src/components/Layout.js","webpack://lekplats-gatsby/./src/components/arbete.js","webpack://lekplats-gatsby/./src/components/utbildning.js","webpack://lekplats-gatsby/./src/styles/arbete.module.css","webpack://lekplats-gatsby/./src/pages/omMig.js"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <nav>\r\n      <h1>Flutra</h1>\r\n      <div>\r\n        <Link to=\"/\">Startsida</Link>\r\n        <Link to=\"/labbar\">Projekt</Link>\r\n        <Link to=\"/test\">Coffee</Link>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { StaticQuery, graphql, Link } from \"gatsby\";\r\nimport \"../styles/global.css\";\r\n// import Search from \"./search\";\r\n\r\n// const Footer = () => (\r\n// export default function Footer() {\r\nconst Footer = ({ data }) => {\r\n  // <StaticQuery\r\n  //   query={graphql`\r\n  //     query SearchIndexQuery {\r\n  //       siteSearchIndex {\r\n  //         index\r\n  //       }\r\n  //     }\r\n  //   `}\r\n  //   render={(data) => (\r\n  //     <Footer>\r\n  //       <nav style={{ height: \"100px\" }}>\r\n  //         <div style={{ whiteSpace: \"nowrap\" }}>\r\n  //           <Link to=\"/omMig\">Om mig</Link>\r\n  //           <Link to=\"/kontakt\">Kontakta mig</Link>\r\n  //         </div>\r\n  //         <div>\r\n  //           <Search searchIndex={data.siteSearchIndex.index} />\r\n  //         </div>\r\n  //       </nav>\r\n  //     </Footer>\r\n  //   )}\r\n  // />\r\n  return (\r\n    <>\r\n      <nav style={{ height: \"100px\" }}>\r\n        <div style={{ whiteSpace: \"nowrap\" }}>\r\n          <Link to=\"/omMig\">Om mig</Link>\r\n          <Link to=\"/kontakt\">Kontakta mig</Link>\r\n        </div>\r\n        <div>{/* <Search searchIndex={data.siteSearchIndex.index} /> */}</div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n// );\r\n// export const query = graphql`\r\n//   query MyQuery {\r\n//     siteSearchIndex {\r\n//       index\r\n//     }\r\n//   }\r\n// `;\r\n\r\nexport default Footer;\r\n","// Layout.js\r\nimport React, { useEffect } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"../styles/global.css\";\r\nimport Footer from \"./Footer\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\nexport default function Layout({ children }) {\r\n  useEffect(() => {\r\n    AOS.init();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\", flexDirection: \"column\", minHeight: \"100vh\" }}\r\n    >\r\n      <Navbar />\r\n      <div style={{ flex: 1 }}>{children}</div>\r\n      <Footer style={{ backgroundColor: \"blue\", color: \"white\" }} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\n\r\nconst Arbete = ({ data }) => {\r\n  console.log({ data });\r\n  const nodes = data.allContentfulArbete.nodes;\r\n\r\n  // };\r\n\r\n  // Inline CSS-stilar som en JavaScript-objekt\r\n  const styles = {\r\n    thumbnail: {\r\n      maxWidth: \"400px\" /* Justera bredden efter behov */,\r\n      margin: \"20px\",\r\n      border: \"1px solid #ccc\",\r\n      padding: \"30px\",\r\n    },\r\n    content: {\r\n      position: \"relative\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      gap: \"5px\",\r\n    },\r\n    image: {\r\n      maxWidth: \"50%\",\r\n      height: \"auto\",\r\n      display: \"block\",\r\n    },\r\n    text: {\r\n      marginTop: \"10px\",\r\n      fontSize: \"14px\",\r\n    },\r\n    title: {\r\n      fontSize: \"20px\",\r\n      marginBottom: \"10px\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Loopa igenom varje nod och visa titel, bild och text */}\r\n      {console.log(data.allContentfulArbete)}\r\n      {nodes.map((node, index) => (\r\n        <div style={styles.thumbnail} key={index}>\r\n          <h1 style={styles.title}>{node.title}</h1>\r\n          <div style={styles.content}>\r\n            <p style={styles.text}>{node.info.info}</p>\r\n            <GatsbyImage\r\n              image={getImage(node.imageStar)}\r\n              style={styles.image.getsbyImageData}\r\n              alt={node.title}\r\n            />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Arbete;\r\n","import React from \"react\";\r\n// import { graphql } from \"gatsby\"\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\n/*GatsbyImage för bildoptimering, alt med titel som värde.\r\nMen alt-attributer kan lämnas tomma och ändå höja tillgänligheten*/\r\nconst Arbete = ({ data }) => {\r\n  const nodes = data.allContentfulUtbildning.nodes;\r\n  // Inline CSS-stilar som en JavaScript-objekt\r\n  const styles = {\r\n    thumbnail: {\r\n      maxWidth: \"400px\" /* Justera bredden efter behov */,\r\n      margin: \"20px\",\r\n      border: \"1px solid #ccc\",\r\n      padding: \"30px\",\r\n    },\r\n    content: {\r\n      position: \"relative\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      gap: \"5px\",\r\n    },\r\n    image: {\r\n      maxWidth: \"50%\",\r\n      height: \"auto\",\r\n      display: \"block\",\r\n    },\r\n    text: {\r\n      marginTop: \"10px\",\r\n      fontSize: \"14px\",\r\n    },\r\n    title: {\r\n      fontSize: \"20px\",\r\n      marginBottom: \"10px\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Loopa igenom varje nod och visa titel, bild och text */}\r\n      {nodes.map((node, index) => (\r\n        <div style={styles.thumbnail} key={index}>\r\n          <h1 style={styles.title}>{node.title}</h1>\r\n          <div style={styles.content}>\r\n            <p style={styles.text}>{node.info.info}</p>\r\n            <GatsbyImage\r\n              image={getImage(node.img)}\r\n              style={styles.image.getsbyImageData}\r\n              // src={node.img.file.url}\r\n              alt={node.title}\r\n            />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n// export const query = graphql`\r\n//   query MyQuery {\r\n//     allContentfulUtbildning {\r\n//       nodes {\r\n//         title\r\n//         info {\r\n//           info\r\n//         }\r\n//         img {\r\n//           file {\r\n//             url\r\n//           }\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n// `;\r\n\r\nexport default Arbete;\r\n","// Exports\nexport var mainContainer = \"arbete-module--main-container--2d410\";\nexport var section = \"arbete-module--section--83069\";\nexport var title = \"arbete-module--title--03bd9\";\nexport var presentation = \"arbete-module--presentation--3db79\";\nexport var workGallery = \"arbete-module--work-gallery--c8a07\";\nexport var educationGallery = \"arbete-module--education-gallery--8cc00\";\nexport var flexContainer = \"arbete-module--flexContainer--aeece\";\nexport var flexItem = \"arbete-module--flexItem--b521b\";\nexport var gridContainer = \"arbete-module--gridContainer--995c6\";\nexport var gridItem = \"arbete-module--gridItem--5c3a9\";\n","import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\r\nimport Layout from \"../components/Layout\";\r\nimport Arbete from \"../components/arbete\";\r\nimport Utbildning from \"../components/utbildning\";\r\n/*Hämtar mina stilar från stylesheet som INTE är den globala filen*/\r\n/*Graphql frågorna som tillhär mina komponenter ligger i den här filen\r\noch inte i komponenterna eftersom data skickas upp till föräldern*/\r\nimport {\r\n  mainContainer,\r\n  section,\r\n  title,\r\n  presentation,\r\n  workGallery,\r\n  gridContainer,\r\n  gridItem,\r\n} from \"../styles/arbete.module.css\";\r\n\r\nconst OmMig = ({ data }) => {\r\n  console.log({ data });\r\n  const aboutmeList = data.allContentfulOmMig.edges;\r\n\r\n  return (\r\n    <Layout>\r\n      <main className={mainContainer}>\r\n        {aboutmeList.map(({ node }) => (\r\n          <div key={node.title} className={section}>\r\n            <h1 className={title}>{node.title}</h1>\r\n            <p className={presentation}>\r\n              {documentToReactComponents(\r\n                JSON.parse(node.presentationstext.raw)\r\n              )}\r\n            </p>\r\n\r\n            {node.arbetslivserfarenhet &&\r\n              node.arbetslivserfarenhet.length > 0 && (\r\n                <div className={gridContainer}>\r\n                  <div className={gridItem}>\r\n                    <h2 className={title}>Erfarenhet</h2>\r\n                    <div className={workGallery}>\r\n                      {node.arbetslivserfarenhet.map((arbete, arbeteIndex) => (\r\n                        <Arbete key={arbeteIndex} data={data} />\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {node.utbildning && node.utbildning.length > 0 && (\r\n                    <div className={gridItem}>\r\n                      <h2 className={title}>Utbildning</h2>\r\n                      <div className={workGallery}>\r\n                        <Utbildning data={data} />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n          </div>\r\n        ))}\r\n      </main>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allContentfulOmMig {\r\n      edges {\r\n        node {\r\n          title\r\n          utbildning\r\n          arbetslivserfarenhet\r\n          presentationstext {\r\n            raw\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allContentfulUtbildning {\r\n      nodes {\r\n        title\r\n        info {\r\n          info\r\n        }\r\n        plats\r\n        img {\r\n          gatsbyImageData\r\n        }\r\n      }\r\n    }\r\n    allContentfulArbete {\r\n      nodes {\r\n        title\r\n        info {\r\n          info\r\n        }\r\n        imageStar {\r\n          gatsbyImageData\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default OmMig;\r\n"],"names":["DEFAULT_PIXEL_DENSITIES","DEFAULT_BREAKPOINTS","EVERY_BREAKPOINT","DEFAULT_FLUID_WIDTH","DEFAULT_FIXED_WIDTH","DEFAULT_ASPECT_RATIO","warn","message","sortNumeric","a","b","getSizes","width","layout","getSrcSet","images","map","image","src","join","formatFromFilename","filename","lastIndexOf","dot","ext","slice","length","setDefaultDimensions","args","height","sourceMetadata","breakpoints","aspectRatio","formats","format","toLowerCase","camelCase","Math","round","_extends","getLowResolutionImageURL","generateImageSource","fit","options","_generateImageSource","generateImageData","_sourceMetadata","pluginName","reporter","_args2$reporter","backgroundColor","placeholderURL","Error","Set","size","has","delete","add","imageSizes","imgDimensions","_args$reporter","_args$breakpoints","erroneousUserDimensions","Object","entries","filter","_","_ref","dim","_ref2","_ref2$fit","outputPixelDensities","_ref2$reporter","densities","dedupeAndSortDensities","getDimensionsAndAspectRatio","calculated","originalWidth","fixedDimension","sizes","density","presentationWidth","presentationHeight","unscaledWidth","fixedImageSizes","responsiveImageSizes","calculateImageSizes","result","sources","forEach","imageSrc","Boolean","unscaled","find","img","fallback","srcSet","_result$sources","push","type","imageProps","placeholder","values","Array","from","sort","_ref3","_ref3$fit","_ref3$outputPixelDens","min","includes","dimensions","imageAspectRatio","widthOption","Number","MAX_SAFE_INTEGER","heightOption","_widthOption","max","gatsbyImageIsInstalled","GATSBY___IMAGE","getImage","node","_node$images$fallback","isGatsbyImageData","gatsbyImageData","isGatsbyImageDataParent","gatsbyImage","isGatsbyImageParent","childImageSharp","getSrc","_getImage","_getImage$images","_getImage$images$fall","_getImage2$images","_getImage2","_getImage2$images$fal","getImageData","baseUrl","urlBuilder","sourceWidth","sourceHeight","props","_objectWithoutPropertiesLoose","_breakpoints","withArtDirection","defaultImage","artDirected","_output$placeholder","output","_excluded2","media","process","env","NODE_ENV","console","source","concat","_output$placeholder$s","apply","_Picture$propTypes","loading","alt","shouldLoad","React","decoding","undefined","Picture","_ref2$shouldLoad","Image","key","fallbackImage","propTypes","PropTypes","string","isRequired","bool","displayName","exact","arrayOf","oneOfType","Placeholder","createElement","propName","componentName","MainImage","NativeScriptLoading","dangerouslySetInnerHTML","__html","Sizer","paddingTop","style","maxWidth","display","role","position","LayoutWrapper","children","Fragment","removeNewLines","str","replace","GatsbyImage","as","className","preactClass","imgClassName","imgStyle","objectFit","objectPosition","placeholderBackgroundColor","wrapperStyle","overflow","verticalAlign","getWrapperProps","wStyle","_getWrapperProps","wClass","wrapperProps","cleanedImages","getPlaceholderProps","isLoaded","top","left","bottom","right","opacity","transition","isLoading","transform","willChange","getMainProps","_excluded","StaticImage","imageData","__imageData","__error","_getStaticImage","GatsbyImageServer","checkDimensionProps","number","validLayouts","Link","Navbar","StaticQuery","graphql","Footer","data","whiteSpace","useEffect","AOS","Layout","init","flexDirection","minHeight","flex","color","Arbete","log","nodes","allContentfulArbete","styles","thumbnail","margin","border","padding","content","alignItems","gap","text","marginTop","fontSize","title","marginBottom","index","info","imageStar","getsbyImageData","allContentfulUtbildning","documentToReactComponents","Utbildning","mainContainer","section","presentation","workGallery","gridContainer","gridItem","OmMig","aboutmeList","allContentfulOmMig","edges","JSON","parse","presentationstext","raw","arbetslivserfarenhet","arbete","arbeteIndex","utbildning","pageQuery"],"sourceRoot":""}